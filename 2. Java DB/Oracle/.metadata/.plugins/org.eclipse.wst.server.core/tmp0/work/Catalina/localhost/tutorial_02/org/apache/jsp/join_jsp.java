/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.26
 * Generated at: 2019-09-23 09:28:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class join_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("\t<head>\r\n");
      out.write("\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("\t\t<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("\t<body>\r\n");
      out.write("\t<font size=\"6\" color=\"green\">NAVER</font><br><br><hr>\r\n");
      out.write("\t<form action=\"join_pro.jsp\" method=\"post\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>아이디</b></br>\r\n");
      out.write("\t\t<input type=\"text\" name=\"id\" placeholder=\"@naver.com\" required/><br><br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>비밀번호</b></br>\r\n");
      out.write("\t\t<input type=\"password\" name=\"password\" required/><br><br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>비밀번호 재확인</b></br>\r\n");
      out.write("\t\t<input type=\"password\" name=\"password_re\" required/><br><br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>이름</b></br>\r\n");
      out.write("\t\t<input type=\"text\" name=\"name\"/><br><br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>생년월일</b><br><br>\r\n");
      out.write("\t\t<input type=\"text\" name=\"birth_year\" placeholder=\"년(4자)\"/>\r\n");
      out.write("\t\t<select name=\"birth_mon\">\r\n");
      out.write("\t\t\t<option value=\"\" selected disabled hidden>월</option>\r\n");
      out.write("\t\t\t<option value = \"1\">1월</option>\r\n");
      out.write("\t\t\t<option value = \"2\">2월</option>\r\n");
      out.write("\t\t\t<option value = \"3\">3월</option>\r\n");
      out.write("\t\t\t<option value = \"4\">4월</option>\r\n");
      out.write("\t\t\t<option value = \"5\">5월</option>\r\n");
      out.write("\t\t\t<option value = \"6\">6월</option>\r\n");
      out.write("\t\t\t<option value = \"7\">7월</option>\r\n");
      out.write("\t\t\t<option value = \"8\">8월</option>\r\n");
      out.write("\t\t\t<option value = \"9\">9월</option>\r\n");
      out.write("\t\t\t<option value = \"10\">10월</option>\r\n");
      out.write("\t\t\t<option value = \"11\">11월</option>\r\n");
      out.write("\t\t\t<option value = \"12\">12월</option>\r\n");
      out.write("\t\t</select>\r\n");
      out.write("\t\t<input type=\"text\" name=\"birth_day\" placeholder=\"일\"/><br><br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>성별</b></br>\r\n");
      out.write("\t\t<select  name = \"gender\">\r\n");
      out.write("\t\t\t<option value = \"man\">man</option>\r\n");
      out.write("\t\t\t<option value = \"woman\">woman</option>\r\n");
      out.write("\t\t</select><br><br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>본인 확인 이메일</b><br><br>\r\n");
      out.write("\t\t<input type=\"email\" name=\"email\" placeholder=\"선택 입력\"/><br><br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<b>휴대전화</b><br><br>\r\n");
      out.write("\t\t<select name=\"region\">\r\n");
      out.write("\t\t\t<option value =\"Korea\">Korea</option>\r\n");
      out.write("\t\t\t<option value =\"USA\">United America</option>\r\n");
      out.write("\t\t\t<option value =\"China\">China</option>\r\n");
      out.write("\t\t</select><br><br>\r\n");
      out.write("\t\t<input type=\"tel\" name=\"phone\" pattern=\"[0-9]{3}-[0-9]{4}-[0-9]{4}\" placeholder=\"전화번호 입력\" required>\r\n");
      out.write("\t\t<span>입력형식: 010-0000-0000</span>\r\n");
      out.write("\t\t<button type=\"button\" onclick=\"alert('입력하신 번호로 인증번호가 발송되었습니다.')\">인증번호 받기!</button><br><br>\r\n");
      out.write("\t\t<input type=\"text\" placeholder=\"인증번호를 입력하세요\"/><br><br>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t<input type = \"submit\" value = \"가입하기\"/>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t</form>\r\n");
      out.write("\t</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
